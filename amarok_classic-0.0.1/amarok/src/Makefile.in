# Makefile.in generated by automake 1.7.9 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 483858 $ 
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
ACLOCAL = @ACLOCAL@
ALSALIB_CFLAGS = @ALSALIB_CFLAGS@
ALSALIB_LIBS = @ALSALIB_LIBS@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CFLAGS_GST = @CFLAGS_GST@
CFLAGS_MAS = @CFLAGS_MAS@
CFLAGS_NMM = @CFLAGS_NMM@
CFLAGS_XINE = @CFLAGS_XINE@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
GST_CFLAGS = @GST_CFLAGS@
GST_LIBS = @GST_LIBS@
GST_MAJORMINOR = @GST_MAJORMINOR@
GST_PLUGINS_CFLAGS = @GST_PLUGINS_CFLAGS@
GST_PLUGINS_LIBS = @GST_PLUGINS_LIBS@
GTK_CONFIG = @GTK_CONFIG@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LDFLAGS_NMM = @LDFLAGS_NMM@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBS_MAS = @LIBS_MAS@
LIBS_XINE = @LIBS_XINE@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBVISUAL_CFLAGS = @LIBVISUAL_CFLAGS@
LIBVISUAL_LIBS = @LIBVISUAL_LIBS@
LIBZ = @LIBZ@
LIB_ARTS = @LIB_ARTS@
LIB_GST = @LIB_GST@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_SQLITE = @LIB_SQLITE@
LIB_TUNEPIMP = @LIB_TUNEPIMP@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MAS_CONFIG = @MAS_CONFIG@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MOC = @MOC@
MSGFMT = @MSGFMT@
MYSQL_CONFIG = @MYSQL_CONFIG@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKGCONFIGFOUND = @PKGCONFIGFOUND@
PKG_CONFIG = @PKG_CONFIG@
POSTGRESQL_CONFIG = @POSTGRESQL_CONFIG@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SDL_CONFIG = @SDL_CONFIG@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SQLITE_CFLAGS = @SQLITE_CFLAGS@
SQLITE_LIBS = @SQLITE_LIBS@
STRIP = @STRIP@
TAGLIB_CONFIG = @TAGLIB_CONFIG@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XINE_CONFIG = @XINE_CONFIG@
XMLLINT = @XMLLINT@
XMMS_CONFIG = @XMMS_CONFIG@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
amarok_SUBDIR_included_FALSE = @amarok_SUBDIR_included_FALSE@
amarok_SUBDIR_included_TRUE = @amarok_SUBDIR_included_TRUE@
arts_libs = @arts_libs@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
doc_SUBDIR_included_FALSE = @doc_SUBDIR_included_FALSE@
doc_SUBDIR_included_TRUE = @doc_SUBDIR_included_TRUE@
enable_mysql_FALSE = @enable_mysql_FALSE@
enable_mysql_TRUE = @enable_mysql_TRUE@
enable_postgresql_FALSE = @enable_postgresql_FALSE@
enable_postgresql_TRUE = @enable_postgresql_TRUE@
exec_prefix = @exec_prefix@
gl_libs = @gl_libs@
gtk_cflags = @gtk_cflags@
gtk_libs = @gtk_libs@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
include_ARTS_FALSE = @include_ARTS_FALSE@
include_ARTS_TRUE = @include_ARTS_TRUE@
include_x11_FALSE = @include_x11_FALSE@
include_x11_TRUE = @include_x11_TRUE@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mysql_includes = @mysql_includes@
mysql_libs = @mysql_libs@
oldincludedir = @oldincludedir@
po_SUBDIR_included_FALSE = @po_SUBDIR_included_FALSE@
po_SUBDIR_included_TRUE = @po_SUBDIR_included_TRUE@
postgresql_includes = @postgresql_includes@
postgresql_libs = @postgresql_libs@
prefix = @prefix@
program_transform_name = @program_transform_name@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sdl_cflags = @sdl_cflags@
sdl_libs = @sdl_libs@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
taglib_includes = @taglib_includes@
taglib_libs = @taglib_libs@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
unsermake_enable_pch_FALSE = @unsermake_enable_pch_FALSE@
unsermake_enable_pch_TRUE = @unsermake_enable_pch_TRUE@
with_arts_FALSE = @with_arts_FALSE@
with_arts_TRUE = @with_arts_TRUE@
with_gst_FALSE = @with_gst_FALSE@
with_gst_TRUE = @with_gst_TRUE@
with_helix_FALSE = @with_helix_FALSE@
with_helix_TRUE = @with_helix_TRUE@
with_included_sqlite_FALSE = @with_included_sqlite_FALSE@
with_included_sqlite_TRUE = @with_included_sqlite_TRUE@
with_konqsidebar_FALSE = @with_konqsidebar_FALSE@
with_konqsidebar_TRUE = @with_konqsidebar_TRUE@
with_libvisual_FALSE = @with_libvisual_FALSE@
with_libvisual_TRUE = @with_libvisual_TRUE@
with_mas_FALSE = @with_mas_FALSE@
with_mas_TRUE = @with_mas_TRUE@
with_nmm_FALSE = @with_nmm_FALSE@
with_nmm_TRUE = @with_nmm_TRUE@
with_xine_FALSE = @with_xine_FALSE@
with_xine_TRUE = @with_xine_TRUE@
with_xmmswrapper_FALSE = @with_xmmswrapper_FALSE@
with_xmmswrapper_TRUE = @with_xmmswrapper_TRUE@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
xmms_cflags = @xmms_cflags@
xmms_libs = @xmms_libs@
@with_included_sqlite_TRUE@SQLITE_SUBDIR = sqlite
@with_included_sqlite_TRUE@LIB_SQLITE_LOCAL = $(top_builddir)/amarok/src/sqlite/libsqlite.la
@with_included_sqlite_TRUE@sqlite_includes = -I$(top_srcdir)/amarok/src/sqlite

@with_konqsidebar_TRUE@KONQSIDEBAR_SUBDIR = konquisidebar

bin_PROGRAMS = amarokapp

SUBDIRS = \
    amarokcore \
    $(SQLITE_SUBDIR) \
    analyzers \
    data \
    plugin \
    engine \
    ipod \
    images \
    loader \
    scripts \
    themes \
    vis \
    $(KONQSIDEBAR_SUBDIR) \
    statusbar


INCLUDES = \
    -I$(top_builddir)/amarok/src/amarokcore \
    -I$(top_srcdir)/amarok/src/amarokcore \
    -I$(top_srcdir)/amarok/src/analyzers \
    -I$(top_srcdir)/amarok/src/engine \
    -I$(top_srcdir)/amarok/src/plugin \
    -I$(top_srcdir)/amarok/src/statusbar \
    -I$(kde_includes)/arts \
    $(taglib_includes) \
    $(sqlite_includes) \
    $(mysql_includes) \
    $(postgresql_includes) \
    $(all_includes)


#>- amarokapp_SOURCES = \
#>-     Options1.ui \
#>-     Options2.ui \
#>-     Options4.ui \
#>-     Options5.ui \
#>-     Options7.ui \
#>-     Options8.ui \
#>-     actionclasses.cpp \
#>-     app.cpp \
#>-     browserbar.cpp \
#>-     clicklineedit.cpp \
#>-     collectionbrowser.cpp \
#>-     collectiondb.cpp \
#>-     collectionreader.cpp \
#>-     configdialog.cpp \
#>-     contextbrowser.cpp \
#>-     coverfetcher.cpp \
#>-     covermanager.cpp \
#>-     pixmapviewer.cpp \
#>-     cuefile.cpp \
#>-     dbsetup.ui  \
#>-     dbsetup.ui.h \
#>-     directorylist.cpp \
#>-     effectwidget.cpp \
#>-     enginecontroller.cpp \
#>-     engineobserver.cpp \
#>-     equalizergraph.cpp \
#>-     equalizerpresetmanager.cpp \
#>-     equalizersetup.cpp \
#>-     fht.cpp \
#>-     filebrowser.cpp \
#>-     firstrunwizard.ui \
#>-     k3bexporter.cpp \
#>-     kbookmarkhandler.cpp \
#>-     ktrm.cpp \
#>-     mediabrowser.cpp \
#>-     metabundle.cpp \
#>-     multitabbar.cpp \
#>-     osd.cpp \
#>-     party.cpp \
#>-     partydialogbase.ui \
#>-     playerwindow.cpp \
#>-     playlist.cpp \
#>-     playlistbrowser.cpp \
#>-     playlistbrowseritem.cpp \
#>-     playlistitem.cpp \
#>-     playlistloader.cpp \
#>-     playlistwindow.cpp \
#>-     pluginmanager.cpp \
#>-     podcastsettings.cpp \
#>-     podcastsettingsbase.ui \
#>-     prettypopupmenu.cpp \
#>-     queuemanager.cpp \
#>-     refreshimages.cpp \
#>-     scriptmanager.cpp \
#>-     scriptmanagerbase.ui \
#>-     scrobbler.cpp \
#>-     sliderwidget.cpp \
#>-     smartplaylisteditor.cpp \
#>-     socketserver.cpp \
#>-     streamprovider.cpp \
#>-     systray.cpp \
#>-     tagdialog.cpp \
#>-     tagdialogbase.ui \
#>-     threadweaver.cpp \
#>-     tracktooltip.cpp \
#>-     trackpickerdialog.cpp \
#>-     trackpickerdialogbase.ui
#>+ 68
amarokapp_SOURCES=\
     \
     \
     \
     \
     \
     \
    actionclasses.cpp \
    app.cpp \
    browserbar.cpp \
    clicklineedit.cpp \
    collectionbrowser.cpp \
    collectiondb.cpp \
    collectionreader.cpp \
    configdialog.cpp \
    contextbrowser.cpp \
    coverfetcher.cpp \
    covermanager.cpp \
    pixmapviewer.cpp \
    cuefile.cpp \
      \
    dbsetup.ui.h \
    directorylist.cpp \
    effectwidget.cpp \
    enginecontroller.cpp \
    engineobserver.cpp \
    equalizergraph.cpp \
    equalizerpresetmanager.cpp \
    equalizersetup.cpp \
    fht.cpp \
    filebrowser.cpp \
     \
    k3bexporter.cpp \
    kbookmarkhandler.cpp \
    ktrm.cpp \
    mediabrowser.cpp \
    metabundle.cpp \
    multitabbar.cpp \
    osd.cpp \
    party.cpp \
     \
    playerwindow.cpp \
    playlist.cpp \
    playlistbrowser.cpp \
    playlistbrowseritem.cpp \
    playlistitem.cpp \
    playlistloader.cpp \
    playlistwindow.cpp \
    pluginmanager.cpp \
    podcastsettings.cpp \
     \
    prettypopupmenu.cpp \
    queuemanager.cpp \
    refreshimages.cpp \
    scriptmanager.cpp \
     \
    scrobbler.cpp \
    sliderwidget.cpp \
    smartplaylisteditor.cpp \
    socketserver.cpp \
    streamprovider.cpp \
    systray.cpp \
    tagdialog.cpp \
     \
    threadweaver.cpp \
    tracktooltip.cpp \
    trackpickerdialog.cpp \
     Options1.cpp Options2.cpp Options4.cpp Options5.cpp Options7.cpp Options8.cpp dbsetup.cpp firstrunwizard.cpp partydialogbase.cpp podcastsettingsbase.cpp scriptmanagerbase.cpp tagdialogbase.cpp trackpickerdialogbase.cpp


amarokapp_LDADD = \
    $(top_builddir)/amarok/src/amarokcore/libamarokcore.la \
    $(top_builddir)/amarok/src/analyzers/libanalyzers.la \
    $(top_builddir)/amarok/src/engine/libengine.la \
    $(top_builddir)/amarok/src/plugin/libplugin.la \
    $(top_builddir)/amarok/src/ipod/libipod.la \
    $(top_builddir)/amarok/src/ipod/itunesdb/libitunesdb.la \
    $(top_builddir)/amarok/src/statusbar/libstatusbar.la \
    $(LIB_KUTILS) $(LIB_KFILE) $(LIB_KDEUI) $(LIB_KDECORE) $(LIB_KHTML) $(LIB_KNEWSTUFF) \
    $(taglib_libs) $(gl_libs) $(LIB_SQLITE) $(LIB_SQLITE_LOCAL) $(LIB_TUNEPIMP) \
    $(mysql_libs) \
    $(postgresql_libs)


amarokapp_LDFLAGS = \
    $(all_libraries) \
    $(KDE_RPATH)


#>- METASOURCES = \
#>-     AUTO


KDE_ICON = \
    AUTO


rcdir = \
    $(kde_datadir)/amarok


rc_DATA = \
    amarokui.rc \
    amarokui_xmms.rc


configdir = \
    $(kde_confdir)


config_DATA = \
    amarokrc


xdg_apps_DATA = \
    amarok.desktop


kde_servicetypes_DATA = \
    amarok_plugin.desktop


servicemenudir = \
    $(kde_datadir)/konqueror/servicemenus


servicemenu_DATA = \
    amarok_append.desktop


profiledatadir = \
    $(kde_datadir)/profiles


profiledata_DATA = \
    amarok.profile.xml

subdir = amarok/src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = amarokapp$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_amarokapp_OBJECTS = actionclasses.$(OBJEXT) app.$(OBJEXT) \
	browserbar.$(OBJEXT) clicklineedit.$(OBJEXT) \
	collectionbrowser.$(OBJEXT) collectiondb.$(OBJEXT) \
	collectionreader.$(OBJEXT) configdialog.$(OBJEXT) \
	contextbrowser.$(OBJEXT) coverfetcher.$(OBJEXT) \
	covermanager.$(OBJEXT) pixmapviewer.$(OBJEXT) cuefile.$(OBJEXT) \
	directorylist.$(OBJEXT) effectwidget.$(OBJEXT) \
	enginecontroller.$(OBJEXT) engineobserver.$(OBJEXT) \
	equalizergraph.$(OBJEXT) equalizerpresetmanager.$(OBJEXT) \
	equalizersetup.$(OBJEXT) fht.$(OBJEXT) filebrowser.$(OBJEXT) \
	k3bexporter.$(OBJEXT) kbookmarkhandler.$(OBJEXT) ktrm.$(OBJEXT) \
	mediabrowser.$(OBJEXT) metabundle.$(OBJEXT) \
	multitabbar.$(OBJEXT) osd.$(OBJEXT) party.$(OBJEXT) \
	playerwindow.$(OBJEXT) playlist.$(OBJEXT) \
	playlistbrowser.$(OBJEXT) playlistbrowseritem.$(OBJEXT) \
	playlistitem.$(OBJEXT) playlistloader.$(OBJEXT) \
	playlistwindow.$(OBJEXT) pluginmanager.$(OBJEXT) \
	podcastsettings.$(OBJEXT) prettypopupmenu.$(OBJEXT) \
	queuemanager.$(OBJEXT) refreshimages.$(OBJEXT) \
	scriptmanager.$(OBJEXT) scrobbler.$(OBJEXT) \
	sliderwidget.$(OBJEXT) smartplaylisteditor.$(OBJEXT) \
	socketserver.$(OBJEXT) streamprovider.$(OBJEXT) \
	systray.$(OBJEXT) tagdialog.$(OBJEXT) threadweaver.$(OBJEXT) \
	tracktooltip.$(OBJEXT) trackpickerdialog.$(OBJEXT)
#>- amarokapp_OBJECTS = $(am_amarokapp_OBJECTS)
#>+ 27
amarokapp_final_OBJECTS = amarokapp.all_cpp.o 
amarokapp_nofinal_OBJECTS = actionclasses.$(OBJEXT) app.$(OBJEXT) \
	browserbar.$(OBJEXT) clicklineedit.$(OBJEXT) \
	collectionbrowser.$(OBJEXT) collectiondb.$(OBJEXT) \
	collectionreader.$(OBJEXT) configdialog.$(OBJEXT) \
	contextbrowser.$(OBJEXT) coverfetcher.$(OBJEXT) \
	covermanager.$(OBJEXT) pixmapviewer.$(OBJEXT) cuefile.$(OBJEXT) \
	directorylist.$(OBJEXT) effectwidget.$(OBJEXT) \
	enginecontroller.$(OBJEXT) engineobserver.$(OBJEXT) \
	equalizergraph.$(OBJEXT) equalizerpresetmanager.$(OBJEXT) \
	equalizersetup.$(OBJEXT) fht.$(OBJEXT) filebrowser.$(OBJEXT) \
	k3bexporter.$(OBJEXT) kbookmarkhandler.$(OBJEXT) ktrm.$(OBJEXT) \
	mediabrowser.$(OBJEXT) metabundle.$(OBJEXT) \
	multitabbar.$(OBJEXT) osd.$(OBJEXT) party.$(OBJEXT) \
	playerwindow.$(OBJEXT) playlist.$(OBJEXT) \
	playlistbrowser.$(OBJEXT) playlistbrowseritem.$(OBJEXT) \
	playlistitem.$(OBJEXT) playlistloader.$(OBJEXT) \
	playlistwindow.$(OBJEXT) pluginmanager.$(OBJEXT) \
	podcastsettings.$(OBJEXT) prettypopupmenu.$(OBJEXT) \
	queuemanager.$(OBJEXT) refreshimages.$(OBJEXT) \
	scriptmanager.$(OBJEXT) scrobbler.$(OBJEXT) \
	sliderwidget.$(OBJEXT) smartplaylisteditor.$(OBJEXT) \
	socketserver.$(OBJEXT) streamprovider.$(OBJEXT) \
	systray.$(OBJEXT) tagdialog.$(OBJEXT) threadweaver.$(OBJEXT) \
	tracktooltip.$(OBJEXT) trackpickerdialog.$(OBJEXT) Options1.$(OBJEXT) Options2.$(OBJEXT) Options4.$(OBJEXT) Options5.$(OBJEXT) Options7.$(OBJEXT) Options8.$(OBJEXT) dbsetup.$(OBJEXT) firstrunwizard.$(OBJEXT) partydialogbase.$(OBJEXT) podcastsettingsbase.$(OBJEXT) scriptmanagerbase.$(OBJEXT) tagdialogbase.$(OBJEXT) trackpickerdialogbase.$(OBJEXT)
@KDE_USE_FINAL_FALSE@amarokapp_OBJECTS = $(amarokapp_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@amarokapp_OBJECTS = $(amarokapp_final_OBJECTS)
@with_included_sqlite_TRUE@amarokapp_DEPENDENCIES = \
@with_included_sqlite_TRUE@	$(top_builddir)/amarok/src/amarokcore/libamarokcore.la \
@with_included_sqlite_TRUE@	$(top_builddir)/amarok/src/analyzers/libanalyzers.la \
@with_included_sqlite_TRUE@	$(top_builddir)/amarok/src/engine/libengine.la \
@with_included_sqlite_TRUE@	$(top_builddir)/amarok/src/plugin/libplugin.la \
@with_included_sqlite_TRUE@	$(top_builddir)/amarok/src/ipod/libipod.la \
@with_included_sqlite_TRUE@	$(top_builddir)/amarok/src/ipod/itunesdb/libitunesdb.la \
@with_included_sqlite_TRUE@	$(top_builddir)/amarok/src/statusbar/libstatusbar.la \
@with_included_sqlite_TRUE@	$(top_builddir)/amarok/src/sqlite/libsqlite.la
@with_included_sqlite_FALSE@amarokapp_DEPENDENCIES = \
@with_included_sqlite_FALSE@	$(top_builddir)/amarok/src/amarokcore/libamarokcore.la \
@with_included_sqlite_FALSE@	$(top_builddir)/amarok/src/analyzers/libanalyzers.la \
@with_included_sqlite_FALSE@	$(top_builddir)/amarok/src/engine/libengine.la \
@with_included_sqlite_FALSE@	$(top_builddir)/amarok/src/plugin/libplugin.la \
@with_included_sqlite_FALSE@	$(top_builddir)/amarok/src/ipod/libipod.la \
@with_included_sqlite_FALSE@	$(top_builddir)/amarok/src/ipod/itunesdb/libitunesdb.la \
@with_included_sqlite_FALSE@	$(top_builddir)/amarok/src/statusbar/libstatusbar.la

DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- @AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/actionclasses.Po ./$(DEPDIR)/app.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/browserbar.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/clicklineedit.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/collectionbrowser.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/collectiondb.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/collectionreader.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/configdialog.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/contextbrowser.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/coverfetcher.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/covermanager.Po ./$(DEPDIR)/cuefile.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/directorylist.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/effectwidget.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/enginecontroller.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/engineobserver.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/equalizergraph.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/equalizerpresetmanager.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/equalizersetup.Po ./$(DEPDIR)/fht.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/filebrowser.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/k3bexporter.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/kbookmarkhandler.Po ./$(DEPDIR)/ktrm.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/mediabrowser.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/metabundle.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/multitabbar.Po ./$(DEPDIR)/osd.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/party.Po ./$(DEPDIR)/pixmapviewer.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/playerwindow.Po ./$(DEPDIR)/playlist.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/playlistbrowser.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/playlistbrowseritem.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/playlistitem.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/playlistloader.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/playlistwindow.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/pluginmanager.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/podcastsettings.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/prettypopupmenu.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/queuemanager.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/refreshimages.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/scriptmanager.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/scrobbler.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/sliderwidget.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/smartplaylisteditor.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/socketserver.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/streamprovider.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/systray.Po ./$(DEPDIR)/tagdialog.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/threadweaver.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/trackpickerdialog.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/tracktooltip.Po
#>+ 90
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@DEP_FILES =  $(DEPDIR)/Options1.P $(DEPDIR)/Options2.P $(DEPDIR)/Options4.P $(DEPDIR)/Options5.P $(DEPDIR)/Options7.P $(DEPDIR)/Options8.P $(DEPDIR)/dbsetup.P $(DEPDIR)/firstrunwizard.P $(DEPDIR)/partydialogbase.P $(DEPDIR)/podcastsettingsbase.P $(DEPDIR)/scriptmanagerbase.P $(DEPDIR)/tagdialogbase.P $(DEPDIR)/trackpickerdialogbase.P  $(DEPDIR)/amarokapp.all_cpp.P ./$(DEPDIR)/actionclasses.Po ./$(DEPDIR)/app.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/browserbar.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/clicklineedit.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/collectionbrowser.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/collectiondb.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/collectionreader.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/configdialog.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/contextbrowser.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/coverfetcher.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/covermanager.Po ./$(DEPDIR)/cuefile.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/directorylist.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/effectwidget.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/enginecontroller.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/engineobserver.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/equalizergraph.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/equalizerpresetmanager.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/equalizersetup.Po ./$(DEPDIR)/fht.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/filebrowser.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/k3bexporter.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/kbookmarkhandler.Po ./$(DEPDIR)/ktrm.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/mediabrowser.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/metabundle.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/multitabbar.Po ./$(DEPDIR)/osd.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/party.Po ./$(DEPDIR)/pixmapviewer.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/playerwindow.Po ./$(DEPDIR)/playlist.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/playlistbrowser.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/playlistbrowseritem.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/playlistitem.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/playlistloader.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/playlistwindow.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/pluginmanager.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/podcastsettings.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/prettypopupmenu.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/queuemanager.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/refreshimages.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/scriptmanager.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/scrobbler.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/sliderwidget.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/smartplaylisteditor.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/socketserver.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/streamprovider.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/systray.Po ./$(DEPDIR)/tagdialog.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/threadweaver.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/trackpickerdialog.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/tracktooltip.Po
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@DEP_FILES =  $(DEPDIR)/Options1.P $(DEPDIR)/Options2.P $(DEPDIR)/Options4.P $(DEPDIR)/Options5.P $(DEPDIR)/Options7.P $(DEPDIR)/Options8.P $(DEPDIR)/dbsetup.P $(DEPDIR)/firstrunwizard.P $(DEPDIR)/partydialogbase.P $(DEPDIR)/podcastsettingsbase.P $(DEPDIR)/scriptmanagerbase.P $(DEPDIR)/tagdialogbase.P $(DEPDIR)/trackpickerdialogbase.P ./$(DEPDIR)/actionclasses.Po ./$(DEPDIR)/app.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/browserbar.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/clicklineedit.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/collectionbrowser.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/collectiondb.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/collectionreader.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/configdialog.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/contextbrowser.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/coverfetcher.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/covermanager.Po ./$(DEPDIR)/cuefile.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/directorylist.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/effectwidget.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/enginecontroller.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/engineobserver.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/equalizergraph.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/equalizerpresetmanager.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/equalizersetup.Po ./$(DEPDIR)/fht.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/filebrowser.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/k3bexporter.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/kbookmarkhandler.Po ./$(DEPDIR)/ktrm.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/mediabrowser.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/metabundle.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/multitabbar.Po ./$(DEPDIR)/osd.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/party.Po ./$(DEPDIR)/pixmapviewer.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/playerwindow.Po ./$(DEPDIR)/playlist.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/playlistbrowser.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/playlistbrowseritem.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/playlistitem.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/playlistloader.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/playlistwindow.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/pluginmanager.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/podcastsettings.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/prettypopupmenu.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/queuemanager.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/refreshimages.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/scriptmanager.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/scrobbler.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/sliderwidget.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/smartplaylisteditor.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/socketserver.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/streamprovider.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/systray.Po ./$(DEPDIR)/tagdialog.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/threadweaver.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/trackpickerdialog.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/tracktooltip.Po
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(amarokapp_SOURCES)
DATA = $(config_DATA) $(kde_servicetypes_DATA) $(profiledata_DATA) \
	$(rc_DATA) $(servicemenu_DATA) $(xdg_apps_DATA)


#>- RECURSIVE_TARGETS = info-recursive dvi-recursive pdf-recursive \
#>- 	ps-recursive install-info-recursive uninstall-info-recursive \
#>- 	all-recursive install-data-recursive install-exec-recursive \
#>- 	installdirs-recursive install-recursive uninstall-recursive \
#>- 	check-recursive installcheck-recursive
#>+ 5
RECURSIVE_TARGETS = info-recursive dvi-recursive pdf-recursive \
	ps-recursive install-info-recursive uninstall-info-recursive \
	all-recursive install-data-recursive install-exec-recursive \
	installdirs-recursive install-recursive uninstall-recursive \
	check-recursive installcheck-recursive nmcheck-recursive bcheck-recursive
DIST_COMMON = $(srcdir)/Makefile.in Makefile.am
DIST_SUBDIRS = amarokcore sqlite analyzers data plugin engine ipod \
	images loader scripts themes vis konquisidebar statusbar
SOURCES = $(amarokapp_SOURCES)

#>- all: all-recursive
#>+ 1
all: docs-am  all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  amarok/src/Makefile
#>+ 3
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  amarok/src/Makefile
	cd $(top_srcdir) && perl admin/am_edit amarok/src/Makefile.in
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
amarokapp$(EXEEXT): $(amarokapp_OBJECTS) $(amarokapp_DEPENDENCIES) 
	@rm -f amarokapp$(EXEEXT)
	$(CXXLINK) $(amarokapp_LDFLAGS) $(amarokapp_OBJECTS) $(amarokapp_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/actionclasses.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/app.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/browserbar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/clicklineedit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collectionbrowser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collectiondb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/collectionreader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/configdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/contextbrowser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/coverfetcher.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/covermanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cuefile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/directorylist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/effectwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/enginecontroller.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/engineobserver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/equalizergraph.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/equalizerpresetmanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/equalizersetup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fht.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filebrowser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/k3bexporter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kbookmarkhandler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ktrm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mediabrowser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/metabundle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/multitabbar.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/osd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/party.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pixmapviewer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playerwindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playlist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playlistbrowser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playlistbrowseritem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playlistitem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playlistloader.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/playlistwindow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pluginmanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/podcastsettings.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prettypopupmenu.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/queuemanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/refreshimages.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scriptmanager.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scrobbler.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sliderwidget.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/smartplaylisteditor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/socketserver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/streamprovider.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/systray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tagdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/threadweaver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trackpickerdialog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tracktooltip.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
@am__fastdepCXX_TRUE@	  -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; \
@am__fastdepCXX_TRUE@	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
@am__fastdepCXX_TRUE@	fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
configDATA_INSTALL = $(INSTALL_DATA)
install-configDATA: $(config_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(configdir)
	@list='$(config_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(configDATA_INSTALL) $$d$$p $(DESTDIR)$(configdir)/$$f"; \
	  $(configDATA_INSTALL) $$d$$p $(DESTDIR)$(configdir)/$$f; \
	done

uninstall-configDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(config_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(configdir)/$$f"; \
	  rm -f $(DESTDIR)$(configdir)/$$f; \
	done
kde_servicetypesDATA_INSTALL = $(INSTALL_DATA)
install-kde_servicetypesDATA: $(kde_servicetypes_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(kde_servicetypesdir)
	@list='$(kde_servicetypes_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(kde_servicetypesDATA_INSTALL) $$d$$p $(DESTDIR)$(kde_servicetypesdir)/$$f"; \
	  $(kde_servicetypesDATA_INSTALL) $$d$$p $(DESTDIR)$(kde_servicetypesdir)/$$f; \
	done

uninstall-kde_servicetypesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(kde_servicetypes_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(kde_servicetypesdir)/$$f"; \
	  rm -f $(DESTDIR)$(kde_servicetypesdir)/$$f; \
	done
profiledataDATA_INSTALL = $(INSTALL_DATA)
install-profiledataDATA: $(profiledata_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(profiledatadir)
	@list='$(profiledata_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(profiledataDATA_INSTALL) $$d$$p $(DESTDIR)$(profiledatadir)/$$f"; \
	  $(profiledataDATA_INSTALL) $$d$$p $(DESTDIR)$(profiledatadir)/$$f; \
	done

uninstall-profiledataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(profiledata_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(profiledatadir)/$$f"; \
	  rm -f $(DESTDIR)$(profiledatadir)/$$f; \
	done
rcDATA_INSTALL = $(INSTALL_DATA)
install-rcDATA: $(rc_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(rcdir)
	@list='$(rc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(rcDATA_INSTALL) $$d$$p $(DESTDIR)$(rcdir)/$$f"; \
	  $(rcDATA_INSTALL) $$d$$p $(DESTDIR)$(rcdir)/$$f; \
	done

uninstall-rcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(rc_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(rcdir)/$$f"; \
	  rm -f $(DESTDIR)$(rcdir)/$$f; \
	done
servicemenuDATA_INSTALL = $(INSTALL_DATA)
install-servicemenuDATA: $(servicemenu_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(servicemenudir)
	@list='$(servicemenu_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(servicemenuDATA_INSTALL) $$d$$p $(DESTDIR)$(servicemenudir)/$$f"; \
	  $(servicemenuDATA_INSTALL) $$d$$p $(DESTDIR)$(servicemenudir)/$$f; \
	done

uninstall-servicemenuDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(servicemenu_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(servicemenudir)/$$f"; \
	  rm -f $(DESTDIR)$(servicemenudir)/$$f; \
	done
xdg_appsDATA_INSTALL = $(INSTALL_DATA)
install-xdg_appsDATA: $(xdg_apps_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(xdg_appsdir)
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(xdg_appsDATA_INSTALL) $$d$$p $(DESTDIR)$(xdg_appsdir)/$$f"; \
	  $(xdg_appsDATA_INSTALL) $$d$$p $(DESTDIR)$(xdg_appsdir)/$$f; \
	done

uninstall-xdg_appsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(xdg_apps_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(xdg_appsdir)/$$f"; \
	  rm -f $(DESTDIR)$(xdg_appsdir)/$$f; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ETAGS = etags
ETAGSFLAGS =

CTAGS = ctags
CTAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if (etags --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	else \
	  include_option=--include; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -f $$subdir/TAGS && \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d $(distdir)/$$subdir \
	    || mkdir $(distdir)/$$subdir \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$(top_distdir)" \
	        distdir=../$(distdir)/$$subdir \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS) $(DATA)
installdirs: installdirs-recursive
installdirs-am:
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(configdir) $(DESTDIR)$(kde_servicetypesdir) $(DESTDIR)$(profiledatadir) $(DESTDIR)$(rcdir) $(DESTDIR)$(servicemenudir) $(DESTDIR)$(xdg_appsdir)

install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-ui clean-bcheck clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

info: info-recursive

info-am:

#>- install-data-am: install-configDATA install-kde_servicetypesDATA \
#>- 	install-profiledataDATA install-rcDATA install-servicemenuDATA \
#>- 	install-xdg_appsDATA
#>+ 3
install-data-am: install-kde-icons  install-configDATA install-kde_servicetypesDATA \
	install-profiledataDATA install-rcDATA install-servicemenuDATA \
	install-xdg_appsDATA

install-exec-am: install-binPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

#>- uninstall-am: uninstall-binPROGRAMS uninstall-configDATA \
#>- 	uninstall-info-am uninstall-kde_servicetypesDATA \
#>- 	uninstall-profiledataDATA uninstall-rcDATA \
#>- 	uninstall-servicemenuDATA uninstall-xdg_appsDATA
#>+ 4
uninstall-am: uninstall-kde-icons  uninstall-binPROGRAMS uninstall-configDATA \
	uninstall-info-am uninstall-kde_servicetypesDATA \
	uninstall-profiledataDATA uninstall-rcDATA \
	uninstall-servicemenuDATA uninstall-xdg_appsDATA

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool clean-recursive \
	ctags ctags-recursive distclean distclean-compile \
	distclean-generic distclean-libtool distclean-recursive \
	distclean-tags distdir dvi dvi-am dvi-recursive info info-am \
	info-recursive install install-am install-binPROGRAMS \
	install-configDATA install-data install-data-am \
	install-data-recursive install-exec install-exec-am \
	install-exec-recursive install-info install-info-am \
	install-info-recursive install-kde_servicetypesDATA install-man \
	install-profiledataDATA install-rcDATA install-recursive \
	install-servicemenuDATA install-strip install-xdg_appsDATA \
	installcheck installcheck-am installdirs installdirs-am \
	installdirs-recursive maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	pdf pdf-am pdf-recursive ps ps-am ps-recursive tags \
	tags-recursive uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-configDATA uninstall-info-am uninstall-info-recursive \
	uninstall-kde_servicetypesDATA uninstall-profiledataDATA \
	uninstall-rcDATA uninstall-recursive uninstall-servicemenuDATA \
	uninstall-xdg_appsDATA


messages: rc.cpp
	$(EXTRACTRC) `find . -name "*.rc" -o -name "*.ui" -o -name "*.kcfg"` > rc.cpp
	LIST=`find . -name \*.h -o -name \*.hh -o -name \*.H -o -name \*.hxx -o -name \*.hpp -o -name \*.cpp -o -name \*.cc -o -name \*.cxx -o -name \*.ecpp -o -name \*.C`; \
	if test -n "$$LIST"; then \
		$(XGETTEXT) $$LIST -o $(podir)/amarok.pot; \
	fi

install-exec-hook:
	@echo ""
	@echo "=========================="
	@echo "=  amaroK - INSTALLED  ================================"
	@echo "=========================="
	@echo "="
	@echo "=  Type amarok to start!"
	@echo "="
	@echo "=  If you have problems, please consult the README;"
	@echo "=  if the problems continue join us on #amarok."
	@echo "="
	@echo "======================================================="
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
playlistbrowser.moc: $(srcdir)/playlistbrowser.h
	$(MOC) $(srcdir)/playlistbrowser.h -o playlistbrowser.moc

#>+ 2
mocs: playlistbrowser.moc

#>+ 3
browserbar.moc: $(srcdir)/browserbar.h
	$(MOC) $(srcdir)/browserbar.h -o browserbar.moc

#>+ 2
mocs: browserbar.moc

#>+ 3
ktrm.moc: $(srcdir)/ktrm.h
	$(MOC) $(srcdir)/ktrm.h -o ktrm.moc

#>+ 2
mocs: ktrm.moc

#>+ 3
directorylist.moc: $(srcdir)/directorylist.h
	$(MOC) $(srcdir)/directorylist.h -o directorylist.moc

#>+ 2
mocs: directorylist.moc

#>+ 3
mediabrowser.moc: $(srcdir)/mediabrowser.h
	$(MOC) $(srcdir)/mediabrowser.h -o mediabrowser.moc

#>+ 2
mocs: mediabrowser.moc

#>+ 3
tagdialog.moc: $(srcdir)/tagdialog.h
	$(MOC) $(srcdir)/tagdialog.h -o tagdialog.moc

#>+ 2
mocs: tagdialog.moc

#>+ 3
enginecontroller.moc: $(srcdir)/enginecontroller.h
	$(MOC) $(srcdir)/enginecontroller.h -o enginecontroller.moc

#>+ 2
mocs: enginecontroller.moc

#>+ 3
contextbrowser.moc: $(srcdir)/contextbrowser.h
	$(MOC) $(srcdir)/contextbrowser.h -o contextbrowser.moc

#>+ 2
mocs: contextbrowser.moc

#>+ 3
collectionbrowser.moc: $(srcdir)/collectionbrowser.h
	$(MOC) $(srcdir)/collectionbrowser.h -o collectionbrowser.moc

#>+ 2
mocs: collectionbrowser.moc

#>+ 3
app.moc: $(srcdir)/app.h
	$(MOC) $(srcdir)/app.h -o app.moc

#>+ 2
mocs: app.moc

#>+ 3
refreshimages.moc: $(srcdir)/refreshimages.h
	$(MOC) $(srcdir)/refreshimages.h -o refreshimages.moc

#>+ 2
mocs: refreshimages.moc

#>+ 3
playlistbrowseritem.moc: $(srcdir)/playlistbrowseritem.h
	$(MOC) $(srcdir)/playlistbrowseritem.h -o playlistbrowseritem.moc

#>+ 2
mocs: playlistbrowseritem.moc

#>+ 3
smartplaylisteditor.moc: $(srcdir)/smartplaylisteditor.h
	$(MOC) $(srcdir)/smartplaylisteditor.h -o smartplaylisteditor.moc

#>+ 2
mocs: smartplaylisteditor.moc

#>+ 3
podcastsettings.moc: $(srcdir)/podcastsettings.h
	$(MOC) $(srcdir)/podcastsettings.h -o podcastsettings.moc

#>+ 2
mocs: podcastsettings.moc

#>+ 3
actionclasses.moc: $(srcdir)/actionclasses.h
	$(MOC) $(srcdir)/actionclasses.h -o actionclasses.moc

#>+ 2
mocs: actionclasses.moc

#>+ 3
filebrowser.moc: $(srcdir)/filebrowser.h
	$(MOC) $(srcdir)/filebrowser.h -o filebrowser.moc

#>+ 2
mocs: filebrowser.moc

#>+ 3
scrobbler.moc: $(srcdir)/scrobbler.h
	$(MOC) $(srcdir)/scrobbler.h -o scrobbler.moc

#>+ 2
mocs: scrobbler.moc

#>+ 3
prettypopupmenu.moc: $(srcdir)/prettypopupmenu.h
	$(MOC) $(srcdir)/prettypopupmenu.h -o prettypopupmenu.moc

#>+ 2
mocs: prettypopupmenu.moc

#>+ 3
osd.moc: $(srcdir)/osd.h
	$(MOC) $(srcdir)/osd.h -o osd.moc

#>+ 2
mocs: osd.moc

#>+ 3
scriptmanager.moc: $(srcdir)/scriptmanager.h
	$(MOC) $(srcdir)/scriptmanager.h -o scriptmanager.moc

#>+ 2
mocs: scriptmanager.moc

#>+ 3
configdialog.moc: $(srcdir)/configdialog.h
	$(MOC) $(srcdir)/configdialog.h -o configdialog.moc

#>+ 2
mocs: configdialog.moc

#>+ 3
equalizersetup.moc: $(srcdir)/equalizersetup.h
	$(MOC) $(srcdir)/equalizersetup.h -o equalizersetup.moc

#>+ 2
mocs: equalizersetup.moc

#>+ 3
playlistwindow.moc: $(srcdir)/playlistwindow.h
	$(MOC) $(srcdir)/playlistwindow.h -o playlistwindow.moc

#>+ 2
mocs: playlistwindow.moc

#>+ 3
tracktooltip.moc: $(srcdir)/tracktooltip.h
	$(MOC) $(srcdir)/tracktooltip.h -o tracktooltip.moc

#>+ 2
mocs: tracktooltip.moc

#>+ 3
clicklineedit.moc: $(srcdir)/clicklineedit.h
	$(MOC) $(srcdir)/clicklineedit.h -o clicklineedit.moc

#>+ 2
mocs: clicklineedit.moc

#>+ 3
socketserver.moc: $(srcdir)/socketserver.h
	$(MOC) $(srcdir)/socketserver.h -o socketserver.moc

#>+ 2
mocs: socketserver.moc

#>+ 3
playlistloader.moc: $(srcdir)/playlistloader.h
	$(MOC) $(srcdir)/playlistloader.h -o playlistloader.moc

#>+ 2
mocs: playlistloader.moc

#>+ 3
collectiondb.moc: $(srcdir)/collectiondb.h
	$(MOC) $(srcdir)/collectiondb.h -o collectiondb.moc

#>+ 2
mocs: collectiondb.moc

#>+ 3
equalizerpresetmanager.moc: $(srcdir)/equalizerpresetmanager.h
	$(MOC) $(srcdir)/equalizerpresetmanager.h -o equalizerpresetmanager.moc

#>+ 2
mocs: equalizerpresetmanager.moc

#>+ 3
queuemanager.moc: $(srcdir)/queuemanager.h
	$(MOC) $(srcdir)/queuemanager.h -o queuemanager.moc

#>+ 2
mocs: queuemanager.moc

#>+ 3
multitabbar.moc: $(srcdir)/multitabbar.h
	$(MOC) $(srcdir)/multitabbar.h -o multitabbar.moc

#>+ 2
mocs: multitabbar.moc

#>+ 3
streamprovider.moc: $(srcdir)/streamprovider.h
	$(MOC) $(srcdir)/streamprovider.h -o streamprovider.moc

#>+ 2
mocs: streamprovider.moc

#>+ 3
party.moc: $(srcdir)/party.h
	$(MOC) $(srcdir)/party.h -o party.moc

#>+ 2
mocs: party.moc

#>+ 3
covermanager.moc: $(srcdir)/covermanager.h
	$(MOC) $(srcdir)/covermanager.h -o covermanager.moc

#>+ 2
mocs: covermanager.moc

#>+ 3
multitabbar_p.moc: $(srcdir)/multitabbar_p.h
	$(MOC) $(srcdir)/multitabbar_p.h -o multitabbar_p.moc

#>+ 2
mocs: multitabbar_p.moc

#>+ 3
playlist.moc: $(srcdir)/playlist.h
	$(MOC) $(srcdir)/playlist.h -o playlist.moc

#>+ 2
mocs: playlist.moc

#>+ 3
threadweaver.moc: $(srcdir)/threadweaver.h
	$(MOC) $(srcdir)/threadweaver.h -o threadweaver.moc

#>+ 2
mocs: threadweaver.moc

#>+ 3
trackpickerdialog.moc: $(srcdir)/trackpickerdialog.h
	$(MOC) $(srcdir)/trackpickerdialog.h -o trackpickerdialog.moc

#>+ 2
mocs: trackpickerdialog.moc

#>+ 3
playerwindow.moc: $(srcdir)/playerwindow.h
	$(MOC) $(srcdir)/playerwindow.h -o playerwindow.moc

#>+ 2
mocs: playerwindow.moc

#>+ 3
coverfetcher.moc: $(srcdir)/coverfetcher.h
	$(MOC) $(srcdir)/coverfetcher.h -o coverfetcher.moc

#>+ 2
mocs: coverfetcher.moc

#>+ 3
pixmapviewer.moc: $(srcdir)/pixmapviewer.h
	$(MOC) $(srcdir)/pixmapviewer.h -o pixmapviewer.moc

#>+ 2
mocs: pixmapviewer.moc

#>+ 3
effectwidget.moc: $(srcdir)/effectwidget.h
	$(MOC) $(srcdir)/effectwidget.h -o effectwidget.moc

#>+ 2
mocs: effectwidget.moc

#>+ 3
sliderwidget.moc: $(srcdir)/sliderwidget.h
	$(MOC) $(srcdir)/sliderwidget.h -o sliderwidget.moc

#>+ 2
mocs: sliderwidget.moc

#>+ 3
cuefile.moc: $(srcdir)/cuefile.h
	$(MOC) $(srcdir)/cuefile.h -o cuefile.moc

#>+ 2
mocs: cuefile.moc

#>+ 3
clean-metasources:
	-rm -f  playlistbrowser.moc browserbar.moc ktrm.moc directorylist.moc mediabrowser.moc tagdialog.moc enginecontroller.moc contextbrowser.moc collectionbrowser.moc app.moc refreshimages.moc playlistbrowseritem.moc smartplaylisteditor.moc podcastsettings.moc actionclasses.moc filebrowser.moc scrobbler.moc prettypopupmenu.moc osd.moc scriptmanager.moc configdialog.moc equalizersetup.moc playlistwindow.moc tracktooltip.moc clicklineedit.moc socketserver.moc playlistloader.moc collectiondb.moc equalizerpresetmanager.moc queuemanager.moc multitabbar.moc streamprovider.moc party.moc covermanager.moc multitabbar_p.moc playlist.moc threadweaver.moc trackpickerdialog.moc playerwindow.moc coverfetcher.moc pixmapviewer.moc effectwidget.moc sliderwidget.moc cuefile.moc

#>+ 2
KDE_DIST=firstrunwizard.ui amarokui_xmms.rc playlistbrowser.h refreshimages.h equalizersetup.h Options5.ui.h trackpickerdialogbase.ui Options2.ui amarok.desktop pixmapviewer.h podcastsettings.h ktrm.h Options4.ui SConscript scriptmanager.h playlistwindow.h amarok.h playlistloader.h playlistbrowseritem.h engineobserver.h Options7.ui socketserver.h playerwindow.h hi22-app-amarok.png Options8.ui queuemanager.h tracktooltip.h threadweaver.h collectionbrowser.h hi128-app-amarok.png browserbar.h playlistitem.h collectiondb.h contextbrowser.h partydialogbase.ui amarok_append.desktop party.h directorylist.h osd.h debug.h hi64-app-amarok.png scrobbler.h Makefile.in streamprovider.h qstringx.h tagdialog.h amarokrc pluginmanager.h systray.h enginecontroller.h amarok.profile.xml firstrunwizard.ui.h cuefile.h bcpp.cfg smartplaylisteditor.h hi32-app-amarok.png tagdialogbase.ui sliderwidget.h actionclasses.h Options2.ui.h hi48-app-amarok.png fht.h amarokfilelist.cpp filebrowser.h clicklineedit.h equalizergraph.h multitabbar_p.h effectwidget.h colorgenerator.h k3bexporter.h scriptmanagerbase.ui playlist.h amarokfilelist.h multitabbar.h metabundle.h amarok_plugin.desktop amarokui.rc prettypopupmenu.h configdialog.h browserToolBar.h dbsetup.ui hi16-app-amarok.png podcastsettingsbase.ui app.h covermanager.h Options1.ui collectionreader.h kbookmarkhandler.h mediabrowser.h trackpickerdialog.h tdebug.h equalizerpresetmanager.h Options5.ui coverfetcher.h 

#>+ 16
clean-ui:
	-rm -f \
	Options1.cpp Options1.h Options1.moc \
	Options2.cpp Options2.h Options2.moc \
	Options4.cpp Options4.h Options4.moc \
	Options5.cpp Options5.h Options5.moc \
	Options7.cpp Options7.h Options7.moc \
	Options8.cpp Options8.h Options8.moc \
	dbsetup.cpp dbsetup.h dbsetup.moc \
	firstrunwizard.cpp firstrunwizard.h firstrunwizard.moc \
	partydialogbase.cpp partydialogbase.h partydialogbase.moc \
	podcastsettingsbase.cpp podcastsettingsbase.h podcastsettingsbase.moc \
	scriptmanagerbase.cpp scriptmanagerbase.h scriptmanagerbase.moc \
	tagdialogbase.cpp tagdialogbase.h tagdialogbase.moc \
	trackpickerdialogbase.cpp trackpickerdialogbase.h trackpickerdialogbase.moc 

#>+ 2
docs-am:

#>+ 22
install-kde-icons:
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps
	$(INSTALL_DATA) $(srcdir)/hi16-app-amarok.png $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/amarok.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/128x128/apps
	$(INSTALL_DATA) $(srcdir)/hi128-app-amarok.png $(DESTDIR)$(kde_icondir)/hicolor/128x128/apps/amarok.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps
	$(INSTALL_DATA) $(srcdir)/hi64-app-amarok.png $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps/amarok.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps
	$(INSTALL_DATA) $(srcdir)/hi22-app-amarok.png $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/amarok.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps
	$(INSTALL_DATA) $(srcdir)/hi32-app-amarok.png $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/amarok.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps
	$(INSTALL_DATA) $(srcdir)/hi48-app-amarok.png $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/amarok.png

uninstall-kde-icons:
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/amarok.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/128x128/apps/amarok.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/64x64/apps/amarok.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/22x22/apps/amarok.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/amarok.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/48x48/apps/amarok.png

#>+ 6
force-reedit:
		cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  amarok/src/Makefile
	cd $(top_srcdir) && perl admin/am_edit amarok/src/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-recursive

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
amarokapp.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/actionclasses.cpp $(srcdir)/app.cpp $(srcdir)/browserbar.cpp $(srcdir)/clicklineedit.cpp $(srcdir)/collectionbrowser.cpp $(srcdir)/collectiondb.cpp $(srcdir)/collectionreader.cpp $(srcdir)/configdialog.cpp $(srcdir)/contextbrowser.cpp $(srcdir)/coverfetcher.cpp $(srcdir)/covermanager.cpp $(srcdir)/pixmapviewer.cpp $(srcdir)/cuefile.cpp $(srcdir)/directorylist.cpp $(srcdir)/effectwidget.cpp $(srcdir)/enginecontroller.cpp $(srcdir)/engineobserver.cpp $(srcdir)/equalizergraph.cpp $(srcdir)/equalizerpresetmanager.cpp $(srcdir)/equalizersetup.cpp $(srcdir)/fht.cpp $(srcdir)/filebrowser.cpp $(srcdir)/k3bexporter.cpp $(srcdir)/kbookmarkhandler.cpp $(srcdir)/ktrm.cpp $(srcdir)/mediabrowser.cpp $(srcdir)/metabundle.cpp $(srcdir)/multitabbar.cpp $(srcdir)/osd.cpp $(srcdir)/party.cpp $(srcdir)/playerwindow.cpp $(srcdir)/playlist.cpp $(srcdir)/playlistbrowser.cpp $(srcdir)/playlistbrowseritem.cpp $(srcdir)/playlistitem.cpp $(srcdir)/playlistloader.cpp $(srcdir)/playlistwindow.cpp $(srcdir)/pluginmanager.cpp $(srcdir)/podcastsettings.cpp $(srcdir)/prettypopupmenu.cpp $(srcdir)/queuemanager.cpp $(srcdir)/refreshimages.cpp $(srcdir)/scriptmanager.cpp $(srcdir)/scrobbler.cpp $(srcdir)/sliderwidget.cpp $(srcdir)/smartplaylisteditor.cpp $(srcdir)/socketserver.cpp $(srcdir)/streamprovider.cpp $(srcdir)/systray.cpp $(srcdir)/tagdialog.cpp $(srcdir)/threadweaver.cpp $(srcdir)/tracktooltip.cpp $(srcdir)/trackpickerdialog.cpp Options1.cpp Options2.cpp Options4.cpp Options5.cpp Options7.cpp Options8.cpp dbsetup.cpp firstrunwizard.cpp partydialogbase.cpp podcastsettingsbase.cpp scriptmanagerbase.cpp tagdialogbase.cpp trackpickerdialogbase.cpp  partydialogbase.moc browserbar.moc playlistbrowser.moc firstrunwizard.moc ktrm.moc directorylist.moc mediabrowser.moc trackpickerdialogbase.moc Options2.moc enginecontroller.moc tagdialog.moc dbsetup.moc refreshimages.moc app.moc collectionbrowser.moc contextbrowser.moc playlistbrowseritem.moc podcastsettingsbase.moc smartplaylisteditor.moc podcastsettings.moc filebrowser.moc actionclasses.moc scrobbler.moc Options4.moc Options1.moc osd.moc prettypopupmenu.moc scriptmanager.moc configdialog.moc Options5.moc Options7.moc equalizersetup.moc playlistwindow.moc tracktooltip.moc clicklineedit.moc socketserver.moc playlistloader.moc equalizerpresetmanager.moc collectiondb.moc queuemanager.moc tagdialogbase.moc multitabbar.moc party.moc streamprovider.moc playlist.moc multitabbar_p.moc covermanager.moc trackpickerdialog.moc threadweaver.moc playerwindow.moc scriptmanagerbase.moc pixmapviewer.moc coverfetcher.moc effectwidget.moc cuefile.moc sliderwidget.moc Options8.moc
	@echo 'creating amarokapp.all_cpp.cpp ...'; \
	rm -f amarokapp.all_cpp.files amarokapp.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> amarokapp.all_cpp.final; \
	for file in actionclasses.cpp app.cpp browserbar.cpp clicklineedit.cpp collectionbrowser.cpp collectiondb.cpp collectionreader.cpp configdialog.cpp contextbrowser.cpp coverfetcher.cpp covermanager.cpp pixmapviewer.cpp cuefile.cpp directorylist.cpp effectwidget.cpp enginecontroller.cpp engineobserver.cpp equalizergraph.cpp equalizerpresetmanager.cpp equalizersetup.cpp fht.cpp filebrowser.cpp k3bexporter.cpp kbookmarkhandler.cpp ktrm.cpp mediabrowser.cpp metabundle.cpp multitabbar.cpp osd.cpp party.cpp playerwindow.cpp playlist.cpp playlistbrowser.cpp playlistbrowseritem.cpp playlistitem.cpp playlistloader.cpp playlistwindow.cpp pluginmanager.cpp podcastsettings.cpp prettypopupmenu.cpp queuemanager.cpp refreshimages.cpp scriptmanager.cpp scrobbler.cpp sliderwidget.cpp smartplaylisteditor.cpp socketserver.cpp streamprovider.cpp systray.cpp tagdialog.cpp threadweaver.cpp tracktooltip.cpp trackpickerdialog.cpp Options1.cpp Options2.cpp Options4.cpp Options5.cpp Options7.cpp Options8.cpp dbsetup.cpp firstrunwizard.cpp partydialogbase.cpp podcastsettingsbase.cpp scriptmanagerbase.cpp tagdialogbase.cpp trackpickerdialogbase.cpp ; do \
	  echo "#include \"$$file\"" >> amarokapp.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> amarokapp.all_cpp.final; \
	done; \
	cat amarokapp.all_cpp.final amarokapp.all_cpp.files > amarokapp.all_cpp.cpp; \
	rm -f amarokapp.all_cpp.final amarokapp.all_cpp.files

#>+ 3
clean-final:
	-rm -f amarokapp.all_cpp.cpp

#>+ 3
final:
	$(MAKE) amarokapp_OBJECTS="$(amarokapp_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) amarokapp_OBJECTS="$(amarokapp_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) amarokapp_OBJECTS="$(amarokapp_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) amarokapp_OBJECTS="$(amarokapp_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 143
streamprovider.o: streamprovider.moc 
directorylist.lo: directorylist.moc 
threadweaver.lo: threadweaver.moc 
playlist.o: playlist.moc 
party.o: party.moc 
ktrm.o: ktrm.moc 
$(srcdir)/metabundle.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
$(srcdir)/streamprovider.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
$(srcdir)/covermanager.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
refreshimages.lo: refreshimages.moc 
$(srcdir)/multitabbar.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
equalizerpresetmanager.lo: equalizerpresetmanager.moc 
app.lo: app.moc 
mediabrowser.o: mediabrowser.moc 
$(srcdir)/dbsetup.ui.h: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
playlistwindow.lo: playlistwindow.moc 
effectwidget.o: effectwidget.moc 
$(srcdir)/prettypopupmenu.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
enginecontroller.o: enginecontroller.moc 
refreshimages.o: refreshimages.moc 
scrobbler.o: scrobbler.moc 
podcastsettings.lo: podcastsettings.moc 
collectionbrowser.o: collectionbrowser.moc 
nmcheck-am: nmcheck
$(srcdir)/osd.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
scriptmanager.lo: scriptmanager.moc 
playlistbrowser.lo: playlistbrowser.moc 
$(srcdir)/effectwidget.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
$(srcdir)/systray.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
$(srcdir)/configdialog.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
osd.o: osd.moc 
collectiondb.lo: collectiondb.moc 
$(srcdir)/trackpickerdialog.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
coverfetcher.lo: coverfetcher.moc 
$(srcdir)/smartplaylisteditor.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
$(srcdir)/playerwindow.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
$(srcdir)/fht.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
$(srcdir)/playlistitem.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
$(srcdir)/kbookmarkhandler.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
$(srcdir)/coverfetcher.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
directorylist.o: directorylist.moc 
smartplaylisteditor.lo: smartplaylisteditor.moc 
coverfetcher.o: coverfetcher.moc 
browserbar.lo: browserbar.moc 
trackpickerdialog.o: trackpickerdialog.moc 
ktrm.lo: ktrm.moc 
tracktooltip.o: tracktooltip.moc 
$(srcdir)/tracktooltip.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
$(srcdir)/engineobserver.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
queuemanager.lo: queuemanager.moc 
$(srcdir)/mediabrowser.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
covermanager.o: covermanager.moc 
$(srcdir)/contextbrowser.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
$(srcdir)/tagdialog.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
$(srcdir)/playlistwindow.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
configdialog.o: configdialog.moc 
playlistbrowseritem.lo: playlistbrowseritem.moc 
equalizerpresetmanager.o: equalizerpresetmanager.moc 
scriptmanager.o: scriptmanager.moc 
tracktooltip.lo: tracktooltip.moc 
playerwindow.lo: playerwindow.moc 
threadweaver.o: threadweaver.moc 
clicklineedit.lo: clicklineedit.moc 
$(srcdir)/playlistbrowser.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
trackpickerdialog.lo: trackpickerdialog.moc 
$(srcdir)/playlist.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
socketserver.o: socketserver.moc 
$(srcdir)/k3bexporter.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
multitabbar.o: multitabbar.moc multitabbar_p.moc 
queuemanager.o: queuemanager.moc 
playerwindow.o: playerwindow.moc 
tagdialog.o: tagdialog.moc 
contextbrowser.o: contextbrowser.moc 
collectionbrowser.lo: collectionbrowser.moc 
cuefile.o: cuefile.moc 
$(srcdir)/queuemanager.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
podcastsettings.o: podcastsettings.moc 
$(srcdir)/pluginmanager.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
playlistloader.lo: playlistloader.moc 
$(srcdir)/threadweaver.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
streamprovider.lo: streamprovider.moc 
playlistloader.o: playlistloader.moc 
$(srcdir)/pixmapviewer.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
collectiondb.o: collectiondb.moc 
mediabrowser.lo: mediabrowser.moc 
$(srcdir)/scrobbler.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
playlistbrowser.o: playlistbrowser.moc 
$(srcdir)/enginecontroller.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
$(srcdir)/filebrowser.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
app.o: app.moc 
sliderwidget.lo: sliderwidget.moc 
smartplaylisteditor.o: smartplaylisteditor.moc 
$(srcdir)/equalizergraph.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
equalizersetup.lo: equalizersetup.moc 
party.lo: party.moc 
equalizersetup.o: equalizersetup.moc 
$(srcdir)/party.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
enginecontroller.lo: enginecontroller.moc 
$(srcdir)/directorylist.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
$(srcdir)/cuefile.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
$(srcdir)/playlistloader.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
playlistbrowseritem.o: playlistbrowseritem.moc 
contextbrowser.lo: contextbrowser.moc 
pixmapviewer.lo: pixmapviewer.moc 
$(srcdir)/equalizerpresetmanager.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
tagdialog.lo: tagdialog.moc 
$(srcdir)/equalizersetup.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
cuefile.lo: cuefile.moc 
browserbar.o: browserbar.moc 
$(srcdir)/refreshimages.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
$(srcdir)/collectionreader.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
$(srcdir)/playlistbrowseritem.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
$(srcdir)/collectionbrowser.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
prettypopupmenu.lo: prettypopupmenu.moc 
$(srcdir)/browserbar.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
configdialog.lo: configdialog.moc 
effectwidget.lo: effectwidget.moc 
clicklineedit.o: clicklineedit.moc 
playlistwindow.o: playlistwindow.moc 
actionclasses.lo: actionclasses.moc 
$(srcdir)/clicklineedit.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
filebrowser.lo: filebrowser.moc 
$(srcdir)/ktrm.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
filebrowser.o: filebrowser.moc 
$(srcdir)/collectiondb.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
multitabbar.lo: multitabbar.moc multitabbar_p.moc 
sliderwidget.o: sliderwidget.moc 
$(srcdir)/app.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
playlist.lo: playlist.moc 
$(srcdir)/podcastsettings.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
$(srcdir)/scriptmanager.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
osd.lo: osd.moc 
scrobbler.lo: scrobbler.moc 
actionclasses.o: actionclasses.moc 
nmcheck: 
prettypopupmenu.o: prettypopupmenu.moc 
$(srcdir)/socketserver.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
pixmapviewer.o: pixmapviewer.moc 
covermanager.lo: covermanager.moc 
socketserver.lo: socketserver.moc 
$(srcdir)/sliderwidget.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 
$(srcdir)/actionclasses.cpp: Options1.h Options2.h Options4.h Options5.h Options7.h Options8.h dbsetup.h firstrunwizard.h partydialogbase.h podcastsettingsbase.h scriptmanagerbase.h tagdialogbase.h trackpickerdialogbase.h 

#>+ 195
Options8.cpp: $(srcdir)/Options8.ui Options8.h Options8.moc
	rm -f Options8.cpp
	echo '#include <kdialog.h>' > Options8.cpp
	echo '#include <klocale.h>' >> Options8.cpp
	$(UIC) -tr ${UIC_TR} -i Options8.h $(srcdir)/Options8.ui > Options8.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" Options8.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_Options8,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> Options8.cpp ;\
	rm -f Options8.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "Options8.moc"' >> Options8.cpp; else rm -f Options8.cpp ; exit $$ret ; fi

Options8.h: $(srcdir)/Options8.ui
	rm -rf Options8.h;
	$(UIC) $(srcdir)/Options8.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> Options8.h ;
Options8.moc: Options8.h
	$(MOC) Options8.h -o Options8.moc

Options7.cpp: $(srcdir)/Options7.ui Options7.h Options7.moc
	rm -f Options7.cpp
	echo '#include <kdialog.h>' > Options7.cpp
	echo '#include <klocale.h>' >> Options7.cpp
	$(UIC) -tr ${UIC_TR} -i Options7.h $(srcdir)/Options7.ui > Options7.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" Options7.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_Options7,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> Options7.cpp ;\
	rm -f Options7.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "Options7.moc"' >> Options7.cpp; else rm -f Options7.cpp ; exit $$ret ; fi

Options7.h: $(srcdir)/Options7.ui
	rm -rf Options7.h;
	$(UIC) $(srcdir)/Options7.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> Options7.h ;
Options7.moc: Options7.h
	$(MOC) Options7.h -o Options7.moc

Options4.cpp: $(srcdir)/Options4.ui Options4.h Options4.moc
	rm -f Options4.cpp
	echo '#include <kdialog.h>' > Options4.cpp
	echo '#include <klocale.h>' >> Options4.cpp
	$(UIC) -tr ${UIC_TR} -i Options4.h $(srcdir)/Options4.ui > Options4.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" Options4.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_Options4,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> Options4.cpp ;\
	rm -f Options4.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "Options4.moc"' >> Options4.cpp; else rm -f Options4.cpp ; exit $$ret ; fi

Options4.h: $(srcdir)/Options4.ui
	rm -rf Options4.h;
	$(UIC) $(srcdir)/Options4.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> Options4.h ;
Options4.moc: Options4.h
	$(MOC) Options4.h -o Options4.moc

trackpickerdialogbase.cpp: $(srcdir)/trackpickerdialogbase.ui trackpickerdialogbase.h trackpickerdialogbase.moc
	rm -f trackpickerdialogbase.cpp
	echo '#include <kdialog.h>' > trackpickerdialogbase.cpp
	echo '#include <klocale.h>' >> trackpickerdialogbase.cpp
	$(UIC) -tr ${UIC_TR} -i trackpickerdialogbase.h $(srcdir)/trackpickerdialogbase.ui > trackpickerdialogbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" trackpickerdialogbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_trackpickerdialogbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> trackpickerdialogbase.cpp ;\
	rm -f trackpickerdialogbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "trackpickerdialogbase.moc"' >> trackpickerdialogbase.cpp; else rm -f trackpickerdialogbase.cpp ; exit $$ret ; fi

trackpickerdialogbase.h: $(srcdir)/trackpickerdialogbase.ui
	rm -rf trackpickerdialogbase.h;
	$(UIC) $(srcdir)/trackpickerdialogbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> trackpickerdialogbase.h ;
trackpickerdialogbase.moc: trackpickerdialogbase.h
	$(MOC) trackpickerdialogbase.h -o trackpickerdialogbase.moc

tagdialogbase.cpp: $(srcdir)/tagdialogbase.ui tagdialogbase.h tagdialogbase.moc
	rm -f tagdialogbase.cpp
	echo '#include <kdialog.h>' > tagdialogbase.cpp
	echo '#include <klocale.h>' >> tagdialogbase.cpp
	$(UIC) -tr ${UIC_TR} -i tagdialogbase.h $(srcdir)/tagdialogbase.ui > tagdialogbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" tagdialogbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_tagdialogbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> tagdialogbase.cpp ;\
	rm -f tagdialogbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "tagdialogbase.moc"' >> tagdialogbase.cpp; else rm -f tagdialogbase.cpp ; exit $$ret ; fi

tagdialogbase.h: $(srcdir)/tagdialogbase.ui
	rm -rf tagdialogbase.h;
	$(UIC) $(srcdir)/tagdialogbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> tagdialogbase.h ;
tagdialogbase.moc: tagdialogbase.h
	$(MOC) tagdialogbase.h -o tagdialogbase.moc

Options5.cpp: $(srcdir)/Options5.ui Options5.h Options5.moc
	rm -f Options5.cpp
	echo '#include <kdialog.h>' > Options5.cpp
	echo '#include <klocale.h>' >> Options5.cpp
	$(UIC) -tr ${UIC_TR} -i Options5.h $(srcdir)/Options5.ui > Options5.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" Options5.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_Options5,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> Options5.cpp ;\
	rm -f Options5.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "Options5.moc"' >> Options5.cpp; else rm -f Options5.cpp ; exit $$ret ; fi

Options5.h: $(srcdir)/Options5.ui
	rm -rf Options5.h;
	$(UIC) $(srcdir)/Options5.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> Options5.h ;
Options5.moc: Options5.h
	$(MOC) Options5.h -o Options5.moc

Options2.cpp: $(srcdir)/Options2.ui Options2.h Options2.moc
	rm -f Options2.cpp
	echo '#include <kdialog.h>' > Options2.cpp
	echo '#include <klocale.h>' >> Options2.cpp
	$(UIC) -tr ${UIC_TR} -i Options2.h $(srcdir)/Options2.ui > Options2.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" Options2.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_Options2,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> Options2.cpp ;\
	rm -f Options2.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "Options2.moc"' >> Options2.cpp; else rm -f Options2.cpp ; exit $$ret ; fi

Options2.h: $(srcdir)/Options2.ui
	rm -rf Options2.h;
	$(UIC) $(srcdir)/Options2.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> Options2.h ;
Options2.moc: Options2.h
	$(MOC) Options2.h -o Options2.moc

dbsetup.cpp: $(srcdir)/dbsetup.ui dbsetup.h dbsetup.moc
	rm -f dbsetup.cpp
	echo '#include <kdialog.h>' > dbsetup.cpp
	echo '#include <klocale.h>' >> dbsetup.cpp
	$(UIC) -tr ${UIC_TR} -i dbsetup.h $(srcdir)/dbsetup.ui > dbsetup.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" dbsetup.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_dbsetup,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> dbsetup.cpp ;\
	rm -f dbsetup.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "dbsetup.moc"' >> dbsetup.cpp; else rm -f dbsetup.cpp ; exit $$ret ; fi

dbsetup.h: $(srcdir)/dbsetup.ui
	rm -rf dbsetup.h;
	$(UIC) $(srcdir)/dbsetup.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> dbsetup.h ;
dbsetup.moc: dbsetup.h
	$(MOC) dbsetup.h -o dbsetup.moc

firstrunwizard.cpp: $(srcdir)/firstrunwizard.ui firstrunwizard.h firstrunwizard.moc
	rm -f firstrunwizard.cpp
	echo '#include <kdialog.h>' > firstrunwizard.cpp
	echo '#include <klocale.h>' >> firstrunwizard.cpp
	$(UIC) -tr ${UIC_TR} -i firstrunwizard.h $(srcdir)/firstrunwizard.ui > firstrunwizard.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" firstrunwizard.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_firstrunwizard,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> firstrunwizard.cpp ;\
	rm -f firstrunwizard.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "firstrunwizard.moc"' >> firstrunwizard.cpp; else rm -f firstrunwizard.cpp ; exit $$ret ; fi

firstrunwizard.h: $(srcdir)/firstrunwizard.ui
	rm -rf firstrunwizard.h;
	$(UIC) $(srcdir)/firstrunwizard.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> firstrunwizard.h ;
firstrunwizard.moc: firstrunwizard.h
	$(MOC) firstrunwizard.h -o firstrunwizard.moc

scriptmanagerbase.cpp: $(srcdir)/scriptmanagerbase.ui scriptmanagerbase.h scriptmanagerbase.moc
	rm -f scriptmanagerbase.cpp
	echo '#include <kdialog.h>' > scriptmanagerbase.cpp
	echo '#include <klocale.h>' >> scriptmanagerbase.cpp
	$(UIC) -tr ${UIC_TR} -i scriptmanagerbase.h $(srcdir)/scriptmanagerbase.ui > scriptmanagerbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" scriptmanagerbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_scriptmanagerbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> scriptmanagerbase.cpp ;\
	rm -f scriptmanagerbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "scriptmanagerbase.moc"' >> scriptmanagerbase.cpp; else rm -f scriptmanagerbase.cpp ; exit $$ret ; fi

scriptmanagerbase.h: $(srcdir)/scriptmanagerbase.ui
	rm -rf scriptmanagerbase.h;
	$(UIC) $(srcdir)/scriptmanagerbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> scriptmanagerbase.h ;
scriptmanagerbase.moc: scriptmanagerbase.h
	$(MOC) scriptmanagerbase.h -o scriptmanagerbase.moc

podcastsettingsbase.cpp: $(srcdir)/podcastsettingsbase.ui podcastsettingsbase.h podcastsettingsbase.moc
	rm -f podcastsettingsbase.cpp
	echo '#include <kdialog.h>' > podcastsettingsbase.cpp
	echo '#include <klocale.h>' >> podcastsettingsbase.cpp
	$(UIC) -tr ${UIC_TR} -i podcastsettingsbase.h $(srcdir)/podcastsettingsbase.ui > podcastsettingsbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" podcastsettingsbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_podcastsettingsbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> podcastsettingsbase.cpp ;\
	rm -f podcastsettingsbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "podcastsettingsbase.moc"' >> podcastsettingsbase.cpp; else rm -f podcastsettingsbase.cpp ; exit $$ret ; fi

podcastsettingsbase.h: $(srcdir)/podcastsettingsbase.ui
	rm -rf podcastsettingsbase.h;
	$(UIC) $(srcdir)/podcastsettingsbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> podcastsettingsbase.h ;
podcastsettingsbase.moc: podcastsettingsbase.h
	$(MOC) podcastsettingsbase.h -o podcastsettingsbase.moc

Options1.cpp: $(srcdir)/Options1.ui Options1.h Options1.moc
	rm -f Options1.cpp
	echo '#include <kdialog.h>' > Options1.cpp
	echo '#include <klocale.h>' >> Options1.cpp
	$(UIC) -tr ${UIC_TR} -i Options1.h $(srcdir)/Options1.ui > Options1.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" Options1.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_Options1,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> Options1.cpp ;\
	rm -f Options1.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "Options1.moc"' >> Options1.cpp; else rm -f Options1.cpp ; exit $$ret ; fi

Options1.h: $(srcdir)/Options1.ui
	rm -rf Options1.h;
	$(UIC) $(srcdir)/Options1.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> Options1.h ;
Options1.moc: Options1.h
	$(MOC) Options1.h -o Options1.moc

partydialogbase.cpp: $(srcdir)/partydialogbase.ui partydialogbase.h partydialogbase.moc
	rm -f partydialogbase.cpp
	echo '#include <kdialog.h>' > partydialogbase.cpp
	echo '#include <klocale.h>' >> partydialogbase.cpp
	$(UIC) -tr ${UIC_TR} -i partydialogbase.h $(srcdir)/partydialogbase.ui > partydialogbase.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" partydialogbase.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_partydialogbase,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> partydialogbase.cpp ;\
	rm -f partydialogbase.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "partydialogbase.moc"' >> partydialogbase.cpp; else rm -f partydialogbase.cpp ; exit $$ret ; fi

partydialogbase.h: $(srcdir)/partydialogbase.ui
	rm -rf partydialogbase.h;
	$(UIC) $(srcdir)/partydialogbase.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> partydialogbase.h ;
partydialogbase.moc: partydialogbase.h
	$(MOC) partydialogbase.h -o partydialogbase.moc
