/****************************************************************************
** MetaBundle::XmlLoader::ThreadedLoader meta object code from reading C++ file 'xmlloader_p.h'
**
** Created: Fri Mar 23 10:42:17 2007
**      by: The Qt MOC ($Id: qt/moc_yacc.cpp   3.3.6   edited Mar 8 17:43 $)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#undef QT_NO_COMPAT
#include "xmlloader_p.h"
#include <qmetaobject.h>
#include <qapplication.h>

#include <private/qucomextra_p.h>
#if !defined(Q_MOC_OUTPUT_REVISION) || (Q_MOC_OUTPUT_REVISION != 26)
#error "This file was generated using the moc from 3.3.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

const char *MetaBundle::XmlLoader::ThreadedLoader::className() const
{
    return "MetaBundle::XmlLoader::ThreadedLoader";
}

QMetaObject *MetaBundle::XmlLoader::ThreadedLoader::metaObj = 0;
static QMetaObjectCleanUp cleanUp_MetaBundle__XmlLoader__ThreadedLoader( "MetaBundle::XmlLoader::ThreadedLoader", &MetaBundle::XmlLoader::ThreadedLoader::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString MetaBundle::XmlLoader::ThreadedLoader::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "MetaBundle::XmlLoader::ThreadedLoader", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString MetaBundle::XmlLoader::ThreadedLoader::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "MetaBundle::XmlLoader::ThreadedLoader", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* MetaBundle::XmlLoader::ThreadedLoader::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = QObject::staticMetaObject();
    static const QUParameter param_slot_0[] = {
	{ "bundle", &static_QUType_ptr, "MetaBundle", QUParameter::In },
	{ "attributes", &static_QUType_ptr, "XmlAttributeList", QUParameter::In }
    };
    static const QUMethod slot_0 = {"bundleLoaded", 2, param_slot_0 };
    static const QMetaData slot_tbl[] = {
	{ "bundleLoaded(const MetaBundle&,const XmlAttributeList&)", &slot_0, QMetaData::Private }
    };
    metaObj = QMetaObject::new_metaobject(
	"MetaBundle::XmlLoader::ThreadedLoader", parentObject,
	slot_tbl, 1,
	0, 0,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_MetaBundle__XmlLoader__ThreadedLoader.setMetaObject( metaObj );
    return metaObj;
}

void* MetaBundle::XmlLoader::ThreadedLoader::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "MetaBundle::XmlLoader::ThreadedLoader" ) )
	return this;
    if ( !qstrcmp( clname, "QThread" ) )
	return (QThread*)this;
    return QObject::qt_cast( clname );
}

bool MetaBundle::XmlLoader::ThreadedLoader::qt_invoke( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->slotOffset() ) {
    case 0: bundleLoaded((const MetaBundle&)*((const MetaBundle*)static_QUType_ptr.get(_o+1)),(const XmlAttributeList&)*((const XmlAttributeList*)static_QUType_ptr.get(_o+2))); break;
    default:
	return QObject::qt_invoke( _id, _o );
    }
    return TRUE;
}

bool MetaBundle::XmlLoader::ThreadedLoader::qt_emit( int _id, QUObject* _o )
{
    return QObject::qt_emit(_id,_o);
}
#ifndef QT_NO_PROPERTIES

bool MetaBundle::XmlLoader::ThreadedLoader::qt_property( int id, int f, QVariant* v)
{
    return QObject::qt_property( id, f, v);
}

bool MetaBundle::XmlLoader::ThreadedLoader::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES


const char *MetaBundle::XmlLoader::SimpleLoader::className() const
{
    return "MetaBundle::XmlLoader::SimpleLoader";
}

QMetaObject *MetaBundle::XmlLoader::SimpleLoader::metaObj = 0;
static QMetaObjectCleanUp cleanUp_MetaBundle__XmlLoader__SimpleLoader( "MetaBundle::XmlLoader::SimpleLoader", &MetaBundle::XmlLoader::SimpleLoader::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString MetaBundle::XmlLoader::SimpleLoader::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "MetaBundle::XmlLoader::SimpleLoader", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString MetaBundle::XmlLoader::SimpleLoader::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "MetaBundle::XmlLoader::SimpleLoader", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* MetaBundle::XmlLoader::SimpleLoader::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = QObject::staticMetaObject();
    static const QUParameter param_slot_0[] = {
	{ "bundle", &static_QUType_ptr, "MetaBundle", QUParameter::In },
	{ 0, &static_QUType_ptr, "XmlAttributeList", QUParameter::In }
    };
    static const QUMethod slot_0 = {"bundleLoaded", 2, param_slot_0 };
    static const QMetaData slot_tbl[] = {
	{ "bundleLoaded(const MetaBundle&,const XmlAttributeList&)", &slot_0, QMetaData::Private }
    };
    metaObj = QMetaObject::new_metaobject(
	"MetaBundle::XmlLoader::SimpleLoader", parentObject,
	slot_tbl, 1,
	0, 0,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_MetaBundle__XmlLoader__SimpleLoader.setMetaObject( metaObj );
    return metaObj;
}

void* MetaBundle::XmlLoader::SimpleLoader::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "MetaBundle::XmlLoader::SimpleLoader" ) )
	return this;
    return QObject::qt_cast( clname );
}

bool MetaBundle::XmlLoader::SimpleLoader::qt_invoke( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->slotOffset() ) {
    case 0: bundleLoaded((const MetaBundle&)*((const MetaBundle*)static_QUType_ptr.get(_o+1)),(const XmlAttributeList&)*((const XmlAttributeList*)static_QUType_ptr.get(_o+2))); break;
    default:
	return QObject::qt_invoke( _id, _o );
    }
    return TRUE;
}

bool MetaBundle::XmlLoader::SimpleLoader::qt_emit( int _id, QUObject* _o )
{
    return QObject::qt_emit(_id,_o);
}
#ifndef QT_NO_PROPERTIES

bool MetaBundle::XmlLoader::SimpleLoader::qt_property( int id, int f, QVariant* v)
{
    return QObject::qt_property( id, f, v);
}

bool MetaBundle::XmlLoader::SimpleLoader::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES
