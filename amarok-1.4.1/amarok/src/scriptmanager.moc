/****************************************************************************
** ScriptManager meta object code from reading C++ file 'scriptmanager.h'
**
** Created: Fri Mar 23 10:55:33 2007
**      by: The Qt MOC ($Id: qt/moc_yacc.cpp   3.3.6   edited Mar 8 17:43 $)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#undef QT_NO_COMPAT
#include "scriptmanager.h"
#include <qmetaobject.h>
#include <qapplication.h>

#include <private/qucomextra_p.h>
#if !defined(Q_MOC_OUTPUT_REVISION) || (Q_MOC_OUTPUT_REVISION != 26)
#error "This file was generated using the moc from 3.3.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

const char *ScriptManager::className() const
{
    return "ScriptManager";
}

QMetaObject *ScriptManager::metaObj = 0;
static QMetaObjectCleanUp cleanUp_ScriptManager( "ScriptManager", &ScriptManager::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString ScriptManager::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "ScriptManager", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString ScriptManager::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "ScriptManager", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* ScriptManager::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = KDialogBase::staticMetaObject();
    static const QUMethod slot_0 = {"findScripts", 0, 0 };
    static const QUParameter param_slot_1[] = {
	{ 0, &static_QUType_ptr, "QListViewItem", QUParameter::In }
    };
    static const QUMethod slot_1 = {"slotCurrentChanged", 1, param_slot_1 };
    static const QUParameter param_slot_2[] = {
	{ 0, &static_QUType_bool, 0, QUParameter::Out }
    };
    static const QUMethod slot_2 = {"slotInstallScript", 1, param_slot_2 };
    static const QUParameter param_slot_3[] = {
	{ 0, &static_QUType_bool, 0, QUParameter::Out },
	{ "path", &static_QUType_QString, 0, QUParameter::In }
    };
    static const QUMethod slot_3 = {"slotInstallScript", 2, param_slot_3 };
    static const QUMethod slot_4 = {"slotRetrieveScript", 0, 0 };
    static const QUMethod slot_5 = {"slotUninstallScript", 0, 0 };
    static const QUParameter param_slot_6[] = {
	{ 0, &static_QUType_bool, 0, QUParameter::Out }
    };
    static const QUMethod slot_6 = {"slotRunScript", 1, param_slot_6 };
    static const QUParameter param_slot_7[] = {
	{ 0, &static_QUType_bool, 0, QUParameter::Out },
	{ "silent", &static_QUType_bool, 0, QUParameter::In }
    };
    static const QUMethod slot_7 = {"slotRunScript", 2, param_slot_7 };
    static const QUMethod slot_8 = {"slotStopScript", 0, 0 };
    static const QUMethod slot_9 = {"slotConfigureScript", 0, 0 };
    static const QUMethod slot_10 = {"slotAboutScript", 0, 0 };
    static const QUParameter param_slot_11[] = {
	{ 0, &static_QUType_ptr, "QListViewItem", QUParameter::In },
	{ 0, &static_QUType_varptr, "\x0e", QUParameter::In }
    };
    static const QUMethod slot_11 = {"slotShowContextMenu", 2, param_slot_11 };
    static const QUParameter param_slot_12[] = {
	{ 0, &static_QUType_ptr, "KProcess", QUParameter::In },
	{ 0, &static_QUType_charstar, 0, QUParameter::In },
	{ 0, &static_QUType_int, 0, QUParameter::In }
    };
    static const QUMethod slot_12 = {"slotReceivedStdout", 3, param_slot_12 };
    static const QUParameter param_slot_13[] = {
	{ 0, &static_QUType_ptr, "KProcess", QUParameter::In },
	{ 0, &static_QUType_charstar, 0, QUParameter::In },
	{ 0, &static_QUType_int, 0, QUParameter::In }
    };
    static const QUMethod slot_13 = {"slotReceivedStderr", 3, param_slot_13 };
    static const QUParameter param_slot_14[] = {
	{ "process", &static_QUType_ptr, "KProcess", QUParameter::In }
    };
    static const QUMethod slot_14 = {"scriptFinished", 1, param_slot_14 };
    static const QMetaData slot_tbl[] = {
	{ "findScripts()", &slot_0, QMetaData::Private },
	{ "slotCurrentChanged(QListViewItem*)", &slot_1, QMetaData::Private },
	{ "slotInstallScript()", &slot_2, QMetaData::Private },
	{ "slotInstallScript(const QString&)", &slot_3, QMetaData::Private },
	{ "slotRetrieveScript()", &slot_4, QMetaData::Private },
	{ "slotUninstallScript()", &slot_5, QMetaData::Private },
	{ "slotRunScript()", &slot_6, QMetaData::Private },
	{ "slotRunScript(bool)", &slot_7, QMetaData::Private },
	{ "slotStopScript()", &slot_8, QMetaData::Private },
	{ "slotConfigureScript()", &slot_9, QMetaData::Private },
	{ "slotAboutScript()", &slot_10, QMetaData::Private },
	{ "slotShowContextMenu(QListViewItem*,const QPoint&)", &slot_11, QMetaData::Private },
	{ "slotReceivedStdout(KProcess*,char*,int)", &slot_12, QMetaData::Private },
	{ "slotReceivedStderr(KProcess*,char*,int)", &slot_13, QMetaData::Private },
	{ "scriptFinished(KProcess*)", &slot_14, QMetaData::Private }
    };
    static const QUMethod signal_0 = {"lyricsScriptChanged", 0, 0 };
    static const QMetaData signal_tbl[] = {
	{ "lyricsScriptChanged()", &signal_0, QMetaData::Public }
    };
    metaObj = QMetaObject::new_metaobject(
	"ScriptManager", parentObject,
	slot_tbl, 15,
	signal_tbl, 1,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_ScriptManager.setMetaObject( metaObj );
    return metaObj;
}

void* ScriptManager::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "ScriptManager" ) )
	return this;
    if ( !qstrcmp( clname, "EngineObserver" ) )
	return (EngineObserver*)this;
    return KDialogBase::qt_cast( clname );
}

// SIGNAL lyricsScriptChanged
void ScriptManager::lyricsScriptChanged()
{
    activate_signal( staticMetaObject()->signalOffset() + 0 );
}

bool ScriptManager::qt_invoke( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->slotOffset() ) {
    case 0: findScripts(); break;
    case 1: slotCurrentChanged((QListViewItem*)static_QUType_ptr.get(_o+1)); break;
    case 2: static_QUType_bool.set(_o,slotInstallScript()); break;
    case 3: static_QUType_bool.set(_o,slotInstallScript((const QString&)static_QUType_QString.get(_o+1))); break;
    case 4: slotRetrieveScript(); break;
    case 5: slotUninstallScript(); break;
    case 6: static_QUType_bool.set(_o,slotRunScript()); break;
    case 7: static_QUType_bool.set(_o,slotRunScript((bool)static_QUType_bool.get(_o+1))); break;
    case 8: slotStopScript(); break;
    case 9: slotConfigureScript(); break;
    case 10: slotAboutScript(); break;
    case 11: slotShowContextMenu((QListViewItem*)static_QUType_ptr.get(_o+1),(const QPoint&)*((const QPoint*)static_QUType_ptr.get(_o+2))); break;
    case 12: slotReceivedStdout((KProcess*)static_QUType_ptr.get(_o+1),(char*)static_QUType_charstar.get(_o+2),(int)static_QUType_int.get(_o+3)); break;
    case 13: slotReceivedStderr((KProcess*)static_QUType_ptr.get(_o+1),(char*)static_QUType_charstar.get(_o+2),(int)static_QUType_int.get(_o+3)); break;
    case 14: scriptFinished((KProcess*)static_QUType_ptr.get(_o+1)); break;
    default:
	return KDialogBase::qt_invoke( _id, _o );
    }
    return TRUE;
}

bool ScriptManager::qt_emit( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->signalOffset() ) {
    case 0: lyricsScriptChanged(); break;
    default:
	return KDialogBase::qt_emit(_id,_o);
    }
    return TRUE;
}
#ifndef QT_NO_PROPERTIES

bool ScriptManager::qt_property( int id, int f, QVariant* v)
{
    return KDialogBase::qt_property( id, f, v);
}

bool ScriptManager::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES
