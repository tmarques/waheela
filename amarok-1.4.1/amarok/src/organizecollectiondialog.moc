/****************************************************************************
** OrganizeCollectionDialog meta object code from reading C++ file 'organizecollectiondialog.h'
**
** Created: Fri Mar 23 10:56:50 2007
**      by: The Qt MOC ($Id: qt/moc_yacc.cpp   3.3.6   edited Mar 8 17:43 $)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#undef QT_NO_COMPAT
#include "organizecollectiondialog.h"
#include <qmetaobject.h>
#include <qapplication.h>

#include <private/qucomextra_p.h>
#if !defined(Q_MOC_OUTPUT_REVISION) || (Q_MOC_OUTPUT_REVISION != 26)
#error "This file was generated using the moc from 3.3.6. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

const char *OrganizeCollectionDialog::className() const
{
    return "OrganizeCollectionDialog";
}

QMetaObject *OrganizeCollectionDialog::metaObj = 0;
static QMetaObjectCleanUp cleanUp_OrganizeCollectionDialog( "OrganizeCollectionDialog", &OrganizeCollectionDialog::staticMetaObject );

#ifndef QT_NO_TRANSLATION
QString OrganizeCollectionDialog::tr( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "OrganizeCollectionDialog", s, c, QApplication::DefaultCodec );
    else
	return QString::fromLatin1( s );
}
#ifndef QT_NO_TRANSLATION_UTF8
QString OrganizeCollectionDialog::trUtf8( const char *s, const char *c )
{
    if ( qApp )
	return qApp->translate( "OrganizeCollectionDialog", s, c, QApplication::UnicodeUTF8 );
    else
	return QString::fromUtf8( s );
}
#endif // QT_NO_TRANSLATION_UTF8

#endif // QT_NO_TRANSLATION

QMetaObject* OrganizeCollectionDialog::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    QMetaObject* parentObject = QWidget::staticMetaObject();
    static const QUParameter param_slot_0[] = {
	{ "format", &static_QUType_QString, 0, QUParameter::In }
    };
    static const QUMethod slot_0 = {"preview", 1, param_slot_0 };
    static const QUParameter param_slot_1[] = {
	{ "dummy", &static_QUType_int, 0, QUParameter::In }
    };
    static const QUMethod slot_1 = {"update", 1, param_slot_1 };
    static const QUParameter param_slot_2[] = {
	{ "dummy", &static_QUType_QString, 0, QUParameter::In }
    };
    static const QUMethod slot_2 = {"update", 1, param_slot_2 };
    static const QUMethod slot_3 = {"slotDetails", 0, 0 };
    static const QUMethod slot_4 = {"languageChange", 0, 0 };
    static const QMetaData slot_tbl[] = {
	{ "preview(const QString&)", &slot_0, QMetaData::Public },
	{ "update(int)", &slot_1, QMetaData::Public },
	{ "update(const QString&)", &slot_2, QMetaData::Public },
	{ "slotDetails()", &slot_3, QMetaData::Public },
	{ "languageChange()", &slot_4, QMetaData::Protected }
    };
    static const QUParameter param_signal_0[] = {
	{ 0, &static_QUType_QString, 0, QUParameter::In }
    };
    static const QUMethod signal_0 = {"updatePreview", 1, param_signal_0 };
    static const QMetaData signal_tbl[] = {
	{ "updatePreview(const QString&)", &signal_0, QMetaData::Public }
    };
    metaObj = QMetaObject::new_metaobject(
	"OrganizeCollectionDialog", parentObject,
	slot_tbl, 5,
	signal_tbl, 1,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    cleanUp_OrganizeCollectionDialog.setMetaObject( metaObj );
    return metaObj;
}

void* OrganizeCollectionDialog::qt_cast( const char* clname )
{
    if ( !qstrcmp( clname, "OrganizeCollectionDialog" ) )
	return this;
    return QWidget::qt_cast( clname );
}

// SIGNAL updatePreview
void OrganizeCollectionDialog::updatePreview( const QString& t0 )
{
    activate_signal( staticMetaObject()->signalOffset() + 0, t0 );
}

bool OrganizeCollectionDialog::qt_invoke( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->slotOffset() ) {
    case 0: preview((const QString&)static_QUType_QString.get(_o+1)); break;
    case 1: update((int)static_QUType_int.get(_o+1)); break;
    case 2: update((const QString&)static_QUType_QString.get(_o+1)); break;
    case 3: slotDetails(); break;
    case 4: languageChange(); break;
    default:
	return QWidget::qt_invoke( _id, _o );
    }
    return TRUE;
}

bool OrganizeCollectionDialog::qt_emit( int _id, QUObject* _o )
{
    switch ( _id - staticMetaObject()->signalOffset() ) {
    case 0: updatePreview((const QString&)static_QUType_QString.get(_o+1)); break;
    default:
	return QWidget::qt_emit(_id,_o);
    }
    return TRUE;
}
#ifndef QT_NO_PROPERTIES

bool OrganizeCollectionDialog::qt_property( int id, int f, QVariant* v)
{
    return QWidget::qt_property( id, f, v);
}

bool OrganizeCollectionDialog::qt_static_property( QObject* , int , int , QVariant* ){ return FALSE; }
#endif // QT_NO_PROPERTIES
